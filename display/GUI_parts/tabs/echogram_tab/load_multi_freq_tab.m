function load_multi_freq_tab(main_figure,parent_tab_group)

multi_freq_tab.parent_tab=uitab(parent_tab_group,'Title','Multi Freq','BackgroundColor','white');
multi_freq_tab.setting_panel=uipanel(multi_freq_tab.parent_tab,'Units','normalized','Position',[0 0 1 1]);
%multi_freq_tab.disp_panel=uipanel(multi_freq_tab.parent_tab,'Units','normalized','Position',[0.15 0 0.85 1]);


 uicontrol(...
'Parent',multi_freq_tab.setting_panel,...
'Units','normalized',...
'String','Primary Freq.',...
'Style','text',...
'Position',[0.05 0.9 0.15 0.1],...
'BackgroundColor','white',...
'Callback','');

multi_freq_tab.primary_freq = uicontrol(...
'Parent',multi_freq_tab.setting_panel,...
'Units','normalized',...
'String',{'--'},...
'Style','popupmenu',...
'Value',1,...
'Position',[0.05 0.8 0.15 0.1],...
'BackgroundColor','white',...
'Callback','',...
'Tag','primary_freq');

 uicontrol(...
'Parent',multi_freq_tab.setting_panel,...
'Units','normalized',...
'String','Secondary Freq.',...
'Style','text',...
'Position',[0.25 0.9 0.17 0.1],...
'BackgroundColor','white',...
'Callback','');

multi_freq_tab.secondary_freqs = uicontrol(...
'Parent',multi_freq_tab.setting_panel,...
'Units','normalized',...
'String',{'--'},...
'Style','listbox',...
'max',10,...
'Position',[0.25 0.4 0.15 0.5],...
'BackgroundColor','white',...
'Callback','',...
'Tag','secondary_freqs');

 uicontrol(...
'Parent',multi_freq_tab.setting_panel,...
'Units','normalized',...
'String','Sub-sampling',...
'Style','text',...
'Position',[0.45 0.9 0.15 0.1],...
'BackgroundColor','white',...
'Callback','');

multi_freq_tab.grid_pings=uicontrol(multi_freq_tab.setting_panel,'Style','edit','unit','normalized','position',[0.45 0.8 0.05 0.1],'string','5');
uicontrol(multi_freq_tab.setting_panel,'Style','Text','String','pings','units','normalized','Position',[0.5 0.8 0.15 0.1]);

multi_freq_tab.grid_samples=uicontrol(multi_freq_tab.setting_panel,'Style','edit','unit','normalized','position',[0.45 0.7 0.05 0.1],'string','5');
uicontrol(multi_freq_tab.setting_panel,'Style','Text','String','samples','units','normalized','Position',[0.5 0.7 0.15 0.1]);

set([multi_freq_tab.grid_pings multi_freq_tab.grid_samples],'callback',{@check_fmt_box,0,inf,5,'%.0f'})

uicontrol(...
    'Parent',multi_freq_tab.setting_panel,...
    'style','PushButton',...
    'String','Update',...
    'callback',{@compute_freq_diff_cback,main_figure},...
    'unit','normalized',...
    'position',[0.45 0.1 0.15 0.1]);

setappdata(main_figure,'multi_freq_tab',multi_freq_tab);
end

function compute_freq_diff_cback(src,evtdata,main_figure)

layer=getappdata(main_figure,'Layer');
curr_disp=getappdata(main_figure,'Curr_disp');
if isempty(layer)
    return;
end
multi_freq_tab=getappdata(main_figure,'multi_freq_tab');

primary_freq=str2double(multi_freq_tab.primary_freq.String(multi_freq_tab.primary_freq.Value,:));
secondary_freqs=cellstr(multi_freq_tab.secondary_freqs.String);
secondary_freqs=str2double(secondary_freqs(multi_freq_tab.secondary_freqs.Value));
secondary_freqs=setdiff(secondary_freqs,primary_freq);

if isempty(secondary_freqs)
    return;
end

[idx_freq_primary,~]=layer.find_freq_idx(primary_freq);
[idx_freqs_secondary,~]=layer.find_freq_idx(secondary_freqs);

trans_obj_primary=layer.Transceivers(idx_freq_primary);
reg_primary=trans_obj_primary.create_WC_region(...
    'Ref','Surface',...
    'Cell_w',str2double(multi_freq_tab.grid_pings.String),...
    'Cell_h',str2double(multi_freq_tab.grid_samples.String),...
    'Cell_w_unit','pings',...
    'Cell_h_unit','samples');
output_reg_primary=trans_obj_primary.integrate_region_v2(reg_primary,'keep_bottom',1,'keep_all',1);

[regs_secondary,idx_freqs_secondary]=layer.generate_regions_for_other_freqs(idx_freq_primary,reg_primary,idx_freqs_secondary);

output_regs_secondary=cell(1,numel(idx_freqs_secondary));
output_diff=cell(1,numel(idx_freqs_secondary));
for i=1:numel(idx_freqs_secondary)
    trans_obj_secondary=layer.Transceivers(idx_freqs_secondary(i));
    output_regs_secondary{i}=trans_obj_secondary.integrate_region_v2(regs_secondary(i),'keep_bottom',1,'keep_all',1);
    output_diff{i}  = substract_reg_outputs( output_reg_primary,output_regs_secondary{i});
    
    sv=pow2db_perso(output_diff{i}.Sv_mean_lin(:));
        cax_min=prctile(sv,5);
        cax_max=prctile(sv,95);
        cax=curr_disp.getCaxField('sv');


    
    reg_primary.display_region(output_diff{i},'main_figure',main_figure,...
        'alphadata',double(pow2db_perso(output_reg_primary.Sv_mean_lin)>cax(1)),...
        'Cax',[cax_min cax_max],...
        'Name',sprintf('%s, %dkHz-%dkHz',reg_primary.print(),primary_freq/1e3,secondary_freqs(i)/1e3));
end


end