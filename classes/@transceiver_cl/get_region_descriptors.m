function reg_descriptor=get_region_descriptors(trans_obj,region)

p = inputParser;

addRequired(p,'trans_obj',@(x) isa(x,'transceiver_cl'));
addRequired(p,'region',@(x) isa(x,'region_cl'));
parse(p,trans_obj,region);
ipings=region.Idx_pings(1):region.Idx_pings(end);
irange=region.Idx_r(1):region.Idx_r(end);
range_reg=trans_obj.get_transceiver_range(irange);
dist_reg=trans_obj.get_dist(ipings);

reg_descriptor=struct(...
    'Tag',region.Tag,...
    'ID',region.ID,...
    'Lat',nanmean(trans_obj.get_lat(ipings)),...
    'Long',nanmean(trans_obj.get_long(ipings)),...
    'Time',datestr(nanmean(trans_obj.get_transceiver_time(ipings)),'dd/mm/yyyy HH:MM:SS'),...
    'Bottom_mean_depth',nanmean(trans_obj.get_bottom_range(ipings)),...
    'Length',diff([dist_reg(1) dist_reg(end)]),...
    'Height',diff([range_reg(1) range_reg(end)]),...
    'Mean_depth',nanmean(range_reg),...
    'MaxDepth',nanmax(range_reg),...
    'MinDepth',nanmin(range_reg),...
    'StartTime',datestr(nanmin(trans_obj.get_transceiver_time(ipings)),'dd/mm/yyyy HH:MM:SS'),...
    'EndTime',datestr(nanmax(trans_obj.get_transceiver_time(ipings)),'dd/mm/yyyy HH:MM:SS'),...
    'Perimeter',[],...
    'Area',[],...
    'Roundness',[]);

reg_poly=region.Poly;

reg_poly.Vertices(:,1)=reg_poly.Vertices(:,1)*nanmean(diff(range_reg));
reg_poly.Vertices(:,2)=reg_poly.Vertices(:,2)*nanmean(diff(dist_reg));
conv_hull_poly=reg_poly.convhull;
reg_descriptor.Area=conv_hull_poly.area;
reg_descriptor.Perimeter=conv_hull_poly.perimeter;

reg_descriptor.Roundness=4*pi*conv_hull_poly.area/conv_hull_poly.perimeter^2;

end