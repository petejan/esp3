%                      physcon.m%This routine calculates values of the physical constants.%  Medium = 'Water' or 'Air'%  Default Medium is 'Water'% T is Temperature (C), Sal is Salinity (ppt).  Default Sal is 35 ppt.%%  physcon('Density'            ,'Water', T, Sal) (g cm-3 )  Water Density%  physcon('SpecHeat'           ,'Water', T, Sal) (J/kg/¡C)  Specific Heat%  physcon('KinViscosity'       ,'Water', T     ) (cm2 s-1)  Kinematic Viscosity %  physcon('Conductivity'       ,'Water', T     ) (W/m/¡C )  Thermal conductivity W/m/K%  physcon('Thermal Diffusivity','Water', T     ) (m2 s-1 )  Thermal Diffusivity%  physcon('Expansion'          ,'Water', T     ) (¡C-1   )  Thermal Expansion Coefficient%%  physcon('Vapor Saturation Pressure','Air', T, Sal )  (mb)%  physcon('Air Saturation Vapor','Air',%  physcon('Density','Air',T, Sal, Tair, P_Atm)   (kg m-3)   Air Density%  rhoair=density of air kg/m3   %rhorat=rhoair / rhowat    %cpair=specific heat of air J/kg/K   %e_w=sat. vapour pressure of sea surface mb   %e_a=sat. vapour pressure of atmosphere mb   %q_w=specific humidity of seawater kg/g   %q_a=specific humidity of air kg/g   %ustar=sea surface friction velocity m/s   %function Value = physcon(Name, Medium, T, Sal, Tair, P_Atm); function Value = physcon(Name, Medium, Var1, Var2, Var3, Var4); if nargin==2 & isstr(Medium)==0, Var1 = Medium; Medium = 'Water'; end; if nargin==3 & isstr(Medium)==0, Var1 = Medium; Medium = 'Water'; end; Name = caps(Name); Medium = caps(Medium);if exist('Var4'), if Var4<500, Var4 = Var4*1000; end; end;   %%%%%%%% Water Density at atmospheric pressure %%%%%%%%%%%%% From a polynomial fit (waterdens.m ) to CRC handbook table.if Name(1)=='D' & Medium(1)=='W',   if nargin==3 | nargin==2, Var2 = 35; end;  %% default   T = Var1; Sal = Var2;   pp  = [-3.63153e-14   1.24832e-11 -1.708560e-9   1.307080e-7 -9.63894e-6  6.52502e-5 999.91208062];   pp1 = [ 5.387500e-9  -8.246700e-7  7.643800e-5  -4.089900e-3  0.824493];   pp2 = [-1.654600e-6   1.022700e-4  -5.72466e-3];   Dens_water = polyval(pp,T) + polyval(pp1,T)*Sal + polyval(pp2,T)*Sal.^1.5 + 4.8314e-4*Sal.^2;   Value = Dens_water/1e3;end;%%%%%%% Water specific heat at atmospheric pressure %%%%%%%%if Name(1)=='S' & Medium(1)=='W',   if nargin==3 | nargin==2, Var2 = 35; end;  %% default   T = Var1; Sal = Var2/1e3;   pp  = [ 2.093236e-5  -2.654387e-3  0.1412855  -3.720283  4217.4];   pp1 = [-1.383900e-3   0.107276  -7.6444];   pp2 = [5.3539e-5     -4.0772e-3  0.17709];   SpecHeat = polyval(pp,T) + polyval(pp1,T)*Sal + polyval(pp2,T)*Sal.^1.5;   Value = SpecHeat;end;%%%%%%% Kinematic Viscosity of Water %%%%%%%%if Name(1)=='K' & Medium(1)=='W',   T = Var1;   pp = 1e-6*[-2.6400e-5  1.9324e-3  -6.8420e-2  1.8937];    rnuwat = polyval(pp,T)*1e4;   Value = rnuwat;end;%%%%%%% Thermal Conductivity of Water %%%%%%%%if Name(1)=='C' & Medium(1)=='W',   T = Var1;   pp = [4.4444e-8  -1.3762e-5  2.1429e-3   0.56191];   thermk = polyval(pp,T);   Value = thermk;end;%%%%%%% Thermal diffusivity of Water %%%%%%%%if Name(1)=='T' & Medium(1)=='W',   T = Var1;   rkappa = 1.0e-7 * (1.3321 + 6.2690e-3*T - 6.6667e-5*T*T + 6.6667e-7*T.^3);   Value = rkappaend;%%%%%%% Thermal expansion of Water %%%%%%%%if Name(1)=='E' & Medium(1)=='W',   T = Var1;   alpha = 2.1e-5 * (T + 3.2).^0.79;   Value = alpha;end;%%%%%%% Water Vapor Pressure (mb) %%%%%%%%  Gill, Atmosphere-Ocean, Academic Press, 1982 p. 606if Name(1)=='V' & Medium(1)=='A',   T = Var1; Sal = Var2;   VaporPress = 10.^((0.7859+0.03477.*T)./(1+0.00412.*T)) ;   % where T is the Sea Surface Temperature   Value=VaporPress*(1 - 0.016*Sal/35); %*0.984 = correct for seawaterendreturn;  %sea surface specific humidity  q_w=0.622*(e_w./(Atm_mb-e_w));    %for atmosphere  e_a=10.^((0.7859+0.03477.*lt)./(1+0.00412.*lt));  %correct for relative humidity  e_a=e_a.*(Hu/100);  %atmospheric specific humidity  q_a=0.622*(e_a./(Atm_mb - e_a));    %Air Density  ltk = lt + 273.15;  rhoair = Atm_mb * 100.0;   rhoair = rhoair ./ (287.04 * ltk);  rhoair = rhoair .* (1.0 - q_a + q_a/0.62197);  rhorat = rhoair ./ rhowat;    %The friction velocity at the sea surface calculated  %from the friction velocity in the atmosphere  ustar=(sqrt(rhoair./rhowat)).*sonfric;  %Air specific heat  %cpair = 1005.0;